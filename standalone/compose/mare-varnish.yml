networks:
  shared-dev:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/24
  external:
    driver: bridge


services:
  postgres:
    image: postgres:latest
    command: ["postgres", "-c", "log_statement=all"]
    restart: always
    ports:
      - 5432:5432/tcp
    expose:
      - "5432"
    environment:
      POSTGRES_USER: mare
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: mare
    volumes:
      - postgres_db:/var/lib/postgresql/data
      - postgres_socket:/var/run/postgresql:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mare"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      external:
      shared-dev:
        ipv4_address: 172.28.0.7

  redis:
    image: redis:latest
    ports:
      - 6379:6379/tcp
    networks:
      shared-dev:
        ipv4_address: 172.28.0.2
    command: [sh, -c, "rm -f /data/dump.rdb && redis-server --save \"\" --appendonly no --requirepass secretredispassword"]
    volumes:
      - cache:/data

  mare-server:
    image: darkarchon/mare-synchronos-server:latest
    restart: on-failure
    ports:
      - 6000:6000/tcp
      - 6050:6050/tcp
    expose:
      - "6000"
    networks:
      shared-dev:
        ipv4_address: 172.28.0.3
    environment:
      MareSynchronos__CdnFullUrl: "${DEV_MARE_CDNURL}"
      MareSynchronos__XIVAPIKey: "${DEV_MARE_XIVAPIKEY}"
      DOTNET_USE_POLLING_FILE_WATCHER: 1
    volumes:
      - ../config/mare/server-standalone.json:/opt/MareSynchronosServer/appsettings.json
      - ../log/server-standalone/:/opt/MareSynchronosServer/logs/:rw
      - postgres_socket:/var/run/postgresql/:rw
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:6000/health || exit 1"]
      retries: 60
      start_period: 10s
      timeout: 1s

  mare-auth:
    image: darkarchon/mare-synchronos-authservice:latest
    ports:
      - 5056:8080/tcp
    expose:
      - "5056"
    networks:
      shared-dev:
        ipv4_address: 172.28.0.4
    restart: on-failure
    environment:
      DOTNET_USE_POLLING_FILE_WATCHER: 1
    volumes:
      - ../config/mare/authservice-standalone.json:/opt/MareSynchronosAuthService/appsettings.json
      - ../log/authservice-standalone/:/opt/MareSynchronosAuthService/logs/:rw
      - postgres_socket:/var/run/postgresql/:rw
    depends_on:
      mare-server:
        condition: service_healthy
      postgres:
        condition: service_healthy

  mare-services:
    image: darkarchon/mare-synchronos-services:latest
    restart: on-failure
    networks:
      shared-dev:
        ipv4_address: 172.28.0.8
    environment:
      MareSynchronos__DiscordBotToken: "${DEV_MARE_DISCORDTOKEN}"
      MareSynchronos__DiscordChannelForMessages: "${DEV_MARE_DISCORDCHANNEL}"
      MareSynchronos__DiscordChannelForReports: "${DEV_MARE_DISCORDCHANNEL}"
      MareSynchronos__DiscordChannelForCommands: "${DEV_MARE_DISCORDCHANNEL}"
      DOTNET_USE_POLLING_FILE_WATCHER: 1
    volumes:
      - ../config/mare/services-standalone.json:/opt/MareSynchronosServices/appsettings.json
      - ../log/services-standalone/:/opt/MareSynchronosServices/logs/:rw
      - postgres_socket:/var/run/postgresql/:rw
    depends_on:
      mare-server:
        condition: service_healthy
      postgres:
        condition: service_healthy

  mare-files:
    image: darkarchon/mare-synchronos-staticfilesserver:latest
    ports:
      - 6200:6200/tcp
    networks:
      shared-dev:
        ipv4_address: 172.28.0.5
    restart: on-failure
    environment:
      MareSynchronos__CdnFullUrl: "${DEV_MARE_CDNURL}"
      DOTNET_USE_POLLING_FILE_WATCHER: 1
    volumes:
      - ../config/mare/files-standalone.json:/opt/MareSynchronosStaticFilesServer/appsettings.json
      - ../log/files-standalone/:/opt/MareSynchronosStaticFilesServer/logs/:rw
      - postgres_socket:/var/run/postgresql/:rw
      - ../data/files-standalone/:/marecache/:rw
    depends_on:
      postgres:
        condition: service_healthy
      mare-server:
        condition: service_healthy

  varnish:
    image: varnish:stable
    container_name: varnish
    volumes:
      - ../config/varnish:/etc/varnish/:rw
    ports:
      - "80:80"
    expose:
      - "80"
    networks:
      external:
      shared-dev:
        ipv4_address: 172.28.0.6
    tmpfs:
      - /var/lib/varnish:exec
    environment:
      - VARNISH_SIZE=2G  
    command: "-p default_keep=300"
    depends_on:
      mare-server:
        condition: service_healthy

volumes:
  postgres_socket:
  postgres_db:
  cache:
    driver: local
    

